// src/lib/copilot-cloud.ts
import {
  COPILOT_CLOUD_API_URL,
  COPILOT_CLOUD_VERSION,
  COPILOT_CLOUD_PUBLIC_API_KEY_HEADER
} from "@copilotkit/shared";
var CopilotCloud = class {
};
var RemoteCopilotCloud = class extends CopilotCloud {
  constructor(cloudApiUrl = COPILOT_CLOUD_API_URL) {
    super();
    this.cloudApiUrl = cloudApiUrl;
  }
  async checkGuardrailsInput({
    cloud,
    publicApiKey,
    messages
  }) {
    const url = `${this.cloudApiUrl}/${COPILOT_CLOUD_VERSION}/copilotkit/guardrails/input`;
    const response = await fetch(url, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        [COPILOT_CLOUD_PUBLIC_API_KEY_HEADER]: publicApiKey
      },
      body: JSON.stringify({ messages, cloud })
    });
    if (!response.ok) {
      let message = response.statusText;
      try {
        const json2 = await response.json();
        if (json2.message) {
          message = json2.message;
        }
      } catch (error) {
      }
      throw new Error("Failed to check input guardrails: " + message);
    }
    const json = await response.json();
    return { status: json.status, reason: json.reason };
  }
};

export {
  CopilotCloud,
  RemoteCopilotCloud
};
//# sourceMappingURL=chunk-HRMU7U44.mjs.map